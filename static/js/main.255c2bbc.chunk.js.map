{"version":3,"sources":["components/Menu.js","constants/constants.js","services/FlickrAPI.js","components/Families.js","components/LanguageSelector.js","screens/Info.js","screens/Page.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Container","ul","Element","li","props","className","Menu","items","map","item","index","key","to","path","activeClassName","exact","text","API_KEY","getPhotoUrl","photoId","SIZE_LABELS","getPhoto","sizeLabel","a","fetch","response","ok","json","infos","sizes","size","obj","find","s","label","Error","photoIds","Promise","all","id","photos","getPhotos","FamiliesWrapper","FamilyImage","img","FamilyName","Item","Families","families","setPhotos","useEffect","length","FlickrAPI","f","coverId","then","result","r","source","error","console","log","p","name","src","Content","active","LanguageSelector","language","handleLanguageClick","title","onClick","defaultProps","Text","Contact","Title","Line","A","Info","more","info","useState","setLanguage","selectedLanguage","paragraph","contact","phone","mail","href","target","site","rel","PageWrapper","Header","Logo","LogoTitle","configurations","minWidth","cols","margin","maxWidth","Page","photosets","setPhotosets","menu","render","home","photosetId","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.255c2bbc.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  margin-top: 5rem;\n  text-align: center;\n  @media (max-width: 768px) {\n    margin-top: 2rem;\n  }\n  @media (min-width: 1920px) {\n    margin-top: 15rem;\n  }\n`;\nconst Container = styled.ul`\n  display: block;\n  padding: 0;\n  margin: 0 auto;\n`;\n\nconst Element = styled.li`\n  display: inline-block;\n  position: relative;\n  z-index: 100;\n  a {\n    font-size: 1.3rem;\n    text-decoration: none;\n    padding: 0.5rem 3rem;\n    display: block;\n\n    -webkit-transition: all 0.2s ease-in-out 0s;\n    -moz-transition: all 0.2s ease-in-out 0s;\n    -o-transition: all 0.2s ease-in-out 0s;\n    -ms-transition: all 0.2s ease-in-out 0s;\n    transition: all 0.2s ease-in-out 0s;\n    color: ${(props) => (props.className === \"active\" ? \"black\" : \"white\")};\n    background: ${(props) => (props.className === \"active\" ? \"white\" : \"\")};\n    &.active,\n    &:hover {\n      color: black;\n      background: white;\n    }\n    @media (max-width: 768px) {\n      font-size: 0.6rem;\n      font-weight: 200;\n      padding: 0.5rem 0.8rem;\n    }\n    @media (min-width: 1920px) {\n      font-size: 3rem;\n      padding: 0.5rem 8rem;\n    }\n  }\n`;\n\nconst Menu = ({ items }) => (\n  <Wrapper>\n    <Container>\n      {items.map((item, index) => (\n        <Element key={index}>\n          <NavLink to={item.path} activeClassName=\"active\" exact>\n            {item.text}\n          </NavLink>\n        </Element>\n      ))}\n    </Container>\n  </Wrapper>\n);\n\nexport default Menu;\n","const API_KEY = \"febb771e0ff0730eea9758f8931d7462\";\nconst USER_ID = \"24033063@N00\";\nexport const getPhotosetUrl = (photosetId, extras) =>\n  `https://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=${API_KEY}&extras=${extras}&format=json&nojsoncallback=true&method=flickr.photosets.getPhotos&photoset_id=${photosetId}`;\nexport const getPhotoUrl= photoId =>\n`https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=${API_KEY}&photo_id=${photoId}&format=json&nojsoncallback=1`\n\n  export const EXTRAS = {\n  small320: {\n    url: \"url_n\",\n    width: \"width_n\",\n    height: \"height_n\",\n  },\n  original: { url: \"url_o\", width: \"width_o\", height: \"height_o\" },\n  medium500: { url: \"url_m\", width: \"width_m\", height: \"height_m\" },\n  medium800: { url: \"url_c\", width: \"width_c\", height: \"height_c\" },\n  large1024: { url: \"url_l\", width: \"width_l\", height: \"height_l\" },\n};\n\nexport const SIZE_LABELS = {\n  LARGE: 'Large',\n  SMALL: 'Small',\n  MEDIUM: 'Medium'\n}\n\nexport const ERROR_TYPES = {\n  flickrLoading: \"Photo loading from Flickr\",\n};\n","import { getPhotosetUrl, getPhotoUrl } from \"../constants/constants.js\";\n\nasync function getPhotoset(photoSetId, size) {\n  const response = await fetch(getPhotosetUrl(photoSetId, size));\n  return response && response.ok\n    ? (await response.json()).photoset.photo\n    : { Error: `Error while reading photoset=${photoSetId}` };\n}\n\nasync function getPhoto(photoId, sizeLabel) {\n  const response = await fetch(getPhotoUrl(photoId));\n  if(response && response.ok){\n    const infos = await response.json()\n    const sizes = infos.sizes.size\n    const obj = {photoId, infos: sizes.find(s=>s.label === sizeLabel)}\n    return obj;\n  }\n  else{\n    return { Error: `Error while reading photo=${photoId}` }\n  }\n  /* return response && response.ok\n    ? ({photoId, infos: (await response.json().sizes.size.find(s=>s.label===sizeLabel))})\n    : { Error: `Error while reading photo=${photoId}` };*/\n\n}\n\nasync function getPhotos(photoIds, sizeLabel) {\n  const photos = await Promise.all(photoIds.map(id=>getPhoto(id, sizeLabel)))\n  return photos\n}\n\nexport default {\n  getPhotos,\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport FlickrAPI from \"../services/FlickrAPI\";\nimport { SIZE_LABELS } from \"../constants/constants\";\n\nconst FamiliesWrapper = styled.div`\n  margin-top: .2rem;\n  color: white;\n  background-color: black;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  height: 100%;\n`;\n\nconst FamilyImage = styled.img`\n  width: auto;\n  height: 15rem;\n  border: 1px solid white;\n  margin: .5rem 1rem;\n  @media (min-width: 1920px) {\n    height: 65rem;\n    border: .3rem solid white;\n    margin: 7rem 4rem;\n  }\n`;\n\nconst FamilyName = styled.div`\n  position: relative;\n  top: 25%;\n  font-size: 1.5rem;\n  font-weight: 600;\n  z-index: 60000;\n  @media (min-width: 1920px) {\n    font-size: 4.5rem;\n  }\n`;\n\nconst Item = styled.div`\n  text-align: center;\n  &:hover{\n    cursor: pointer;\n    ${FamilyImage} {\n      webkit-filter: blur(4px); /* Chrome, Safari, Opera */\n      filter: blur(4px);\n    }\n  }\n`;\n\n\n\n\nconst Families = ({\n  families,\n  photos = [],\n  setPhotos,\n}) => {\n  useEffect(() => {\n    if (!photos || !photos.length) {\n      FlickrAPI.getPhotos(families.map(f=>f.coverId), SIZE_LABELS.LARGE).then(\n        (result) => setPhotos(result.map(r=>r.infos.source)),\n        (error) => console.log(\"error =\" + error)\n      );\n    }\n  });\n\nreturn <FamiliesWrapper> {\n  photos && photos.length ? photos.map((p, index)=><Item key={index}><FamilyName>{families[index].name}</FamilyName><FamilyImage src={p}/></Item>) : ''\n}\n</FamiliesWrapper>\n};\n\nexport default Families;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst propTypes = {\n  //language: React.PropTypes.string.isRequired,\n  //handleLanguageClick: React.PropTypes.func.isRequired\n};\nconst defaultProps = {\n  language: \"EU\",\n};\n\nconst Wrapper = styled.div`\n  width: 50%;\n  margin: 0 auto;\n  height: 1.5rem;\n  line-height: 1.5rem;\n  font-size: 0.8rem;\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n    width: 80%;\n    height: 1.5rem;\n    line-height: 1.5rem;\n  }\n\n  @media (max-width: 768px) {\n    width: 70%;\n  }\n  @media (min-width: 1920px) {\n    width: 60%;\n    font-size: 2.5rem;\n    height: 4.4rem;\n    line-height: 4.4rem;\n  }\n`;\n\nconst Content = styled.ul`\n  margin: 0;\n  padding: 0;\n  text-align: right;\n`;\n\nconst Element = styled.li`\n  &:hover {\n    cursor: pointer;\n  }\n  :not(:first-child):before {\n    content: \" | \";\n  }\n  list-style-type: none;\n  display: inline;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.8\")};\n  font-weight: ${(props) => (props.active ? \"600\" : \"unset\")};\n`;\n\nconst LanguageSelector = ({ language, handleLanguageClick }) => {\n  return (\n    <Wrapper>\n      <Content>\n        <Element\n          active={\"EU\" === language}\n          title=\"euskara\"\n          onClick={() => handleLanguageClick(\"EU\")}\n        >\n          EU\n        </Element>\n        <Element\n          active={\"ES\" === language}\n          title=\"castellano\"\n          onClick={() => handleLanguageClick(\"ES\")}\n        >\n          ES\n        </Element>\n        <Element\n          active={\"EN\" === language}\n          title=\"english\"\n          onClick={() => handleLanguageClick(\"EN\")}\n        >\n          EN\n        </Element>\n        <Element\n          active={\"FR\" === language}\n          title=\"français\"\n          onClick={() => handleLanguageClick(\"FR\")}\n        >\n          FR\n        </Element>\n        <Element\n          active={\"CA\" === language}\n          title=\"català\"\n          onClick={() => handleLanguageClick(\"CA\")}\n        >\n          CA\n        </Element>\n      </Content>\n    </Wrapper>\n  );\n};\n\nLanguageSelector.propTypes = propTypes;\nLanguageSelector.defaultProps = defaultProps;\n\nexport default LanguageSelector;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LanguageSelector from \"../components/LanguageSelector\";\nimport { info } from \"../data/data\";\n\nconst Wrapper = styled.div`\n  margin-top: 0.2rem;\n  padding-top: 2rem;\n  height: 100%;\n  background-color: black;\n  @media (min-width: 1920px) {\n    padding-top: 12rem;\n  }\n`;\n\nconst Content = styled.div`\n  width: 50%;\n  margin: 0 auto;\n  border: 1px solid white;\n  @media (max-width: 768px) {\n    width: 70%;\n    padding-top: 1rem;\n  }\n  @media (min-width: 1920px) {\n    width: 60%;\n  }\n`;\n\nconst Text = styled.div`\n  text-align: left;\n  font-family: \"Raleway\", sans-serif;\n  font-size: 1rem;\n  p {\n    margin-bottom: 1.5rem;\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n  span {\n    margin-bottom: 2rem;\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 0.6rem;\n    p {\n      margin-bottom: 1.1rem;\n      margin-left: 0.9rem;\n      margin-right: 0.9rem;\n    }\n  }\n  @media (min-width: 1920px) {\n    padding: 2rem 4rem 6rem;\n    font-size: 3rem;\n  }\n`;\n\nconst Contact = styled.div`\n  background: #808080;\n  border-top: 1px solid black;\n  padding: 1.5rem 2rem;\n  text-align: center;\n  @media (max-width: 768px) {\n    padding: 1rem 0;\n  }\n  @media (min-width: 1920px) {\n    padding: 6rem 6rem;\n  }\n`;\n\nconst Title = styled.div`\n  text-transform: uppercase;\n  font-size: 1.3rem;\n  margin-bottom: 1rem;\n  text-align: center;\n  @media (max-width: 768px) {\n    font-size: 0.85rem;\n    margin-bottom: 0.5rem;\n  }\n  @media (min-width: 1920px) {\n    font-size: 3rem;\n    margin-bottom: 3rem;\n    font-weight: 600;\n  }\n`;\n\nconst Line = styled.div`\n  display: flex;\n  justify-content: space-between;\n  line-height: 2rem;\n  @media (max-width: 768px) {\n    font-size: 0.6rem;\n    flex-direction: column;\n    line-height: 1.2rem;\n  }\n  @media (min-width: 1920px) {\n    font-size: 3rem;\n    line-height: 11.5rem;\n  }\n`;\nconst A = styled.a`\n  text-decoration: none;\n  color: white;\n`;\nconst Info = () => {\n  const { more } = info;\n  const [language, setLanguage] = useState(\"EU\");\n  const languageClickHandler = (selectedLanguage) =>\n    setLanguage(selectedLanguage);\n  return (\n    <Wrapper>\n      <LanguageSelector\n        language={language}\n        handleLanguageClick={languageClickHandler}\n      />\n\n      <Content>\n        <Text>\n          {info[language].text.map((paragraph, key) => (\n            <p key={`paragraph${key}`}>{paragraph}</p>\n          ))}\n        </Text>\n\n        <Contact>\n          <Title>{info[language].contact.title}</Title>\n          <Line>\n            <div>{more.name}</div>\n            <div>{more.phone}</div>\n          </Line>\n          <Line>\n            <div>\n              {info[language].contact.mail}:{\" \"}\n              <A href={`mailto:${more.mail}`} target=\"_top\">\n                {more.mail}\n              </A>\n            </div>\n            <div>\n              <A href={more.site} target=\"_blank\" rel=\"noopener noreferrer\">\n                Flickr\n              </A>\n            </div>\n          </Line>\n        </Contact>\n      </Content>\n    </Wrapper>\n  );\n};\nexport default Info;\nexport { Info };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Menu from \"../components/Menu\";\nimport { home, menu } from \"../data/data.json\";\nimport Families from \"../components/Families\";\nimport Info from \"./Info\";\n\nconst PageWrapper = styled.div`\n  color: white;\n  background-color: black;\n  font-family: \"Raleway\", sans-serif;\n`;\n\nconst Header = styled.div`\n  padding-top: 1.25rem;\n  background-color: black;\n  height: 13.4rem;\n  @media (max-width: 768px) {\n    padding-top: 0.8rem;\n    height: 7.5rem;\n  }\n  @media (min-width: 1920px) {\n    padding-top: 10rem;\n    height: 35.4rem;\n  }\n`;\n\nconst Logo = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 0.8rem;\n  }\n`;\n\nconst LogoTitle = styled.div`\n  height: 5rem;\n  padding: 0.5rem 0;\n  content: url(\"./araotz/araotz.png\");\n  margin: 0 auto;\n  :before {\n    height: 4rem;\n    width: 241px;\n    padding: 0.5rem 0;\n    background-image: url(\"./araotz/araotz.png\");\n    background-size: auto 4rem;\n    display: inline-block;\n    content: \"\";\n    margin: 0 auto;\n    background-repeat: no-repeat;\n  }\n  @media (max-width: 768px) {\n    height: 2.8rem;\n    :before {\n      height: 2.8rem;\n      width: 108px;\n      background-size: auto 1.8rem;\n    }\n  }\n  @media (min-width: 1920px) {\n    height: 15rem;\n    :before {\n      height: 15rem;\n      width: 422px;\n      background-size: auto 15rem;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  float: left;\n  margin: 0 auto;\n  background-color: white;\n`;\n\nconst configurations = [\n  { minWidth: 480, cols: 7, margin: 1 },\n  { maxWidth: 479, cols: 4, margin: 1 },\n];\n\nconst Page = () => {\n  const [photosets, setPhotosets] = useState({});\n\n  const setPhotos = (photosetId, photos) => {\n    setPhotosets({ ...photosets, [photosetId]: photos });\n  };\n\n  return (\n    <HashRouter>\n      <PageWrapper>\n        <Header>\n          <Logo>\n            <LogoTitle />\n          </Logo>\n          <Menu items={menu} />\n        </Header>\n        <Container>\n          <Route\n            exact\n            path={menu[0].path}\n            render={() => (\n              <Families\n                families={home.families}\n                photos={photosets[\"families\"]}\n                setPhotos={p=>setPhotos(\"families\", p)}\n                configurations={configurations}\n              />\n            )}\n          />\n          <Route path={menu[1].path} component={Info} />\n        </Container>\n      </PageWrapper>\n    </HashRouter>\n  );\n};\n\nexport default Page;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Page from \"./screens/Page\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Page />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}